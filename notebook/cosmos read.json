{
	"name": "cosmos read",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/3600cd0c-0725-4a38-8ac6-e135b659c5c8/resourceGroups/dp203/providers/Microsoft.Synapse/workspaces/asaworkspacedp203xb/bigDataPools/SparkPool01",
				"name": "SparkPool01",
				"type": "Spark",
				"endpoint": "https://asaworkspacedp203xb.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"source": [
					"# NOTE\n",
					"\n",
					"For Spark 3 Cosmos DB connector has slightly different configuration. Please select different snippest if a Spark 3.1 + pool is attached."
				]
			},
			{
				"cell_type": "code",
				"source": [
					"# Load a streaming Spark DataFrame from a Cosmos DB container\n",
					"# To select a preferred list of regions in a multi-region Cosmos DB account, add .option(\"spark.cosmos.preferredRegions\", \"<Region1>,<Region2>\")\n",
					"\n",
					"# For Spark 2.4\n",
					"dfStream = spark.readStream\\\n",
					"    .format(\"cosmos.oltp\")\\\n",
					"    .option(\"spark.synapse.linkedService\", \"asacosmosdb01\")\\\n",
					"    .option(\"spark.cosmos.container\", \"OnlineUserProfile01\")\\\n",
					"    .option(\"spark.cosmos.changeFeed.readEnabled\", \"true\")\\\n",
					"    .option(\"spark.cosmos.changeFeed.startFromTheBeginning\", \"true\")\\\n",
					"    .option(\"spark.cosmos.changeFeed.checkpointLocation\", \"/localReadCheckpointFolder\")\\\n",
					"    .option(\"spark.cosmos.changeFeed.queryName\", \"streamQuery\")\\\n",
					"    .load()\n",
					"\n",
					"# For Spark 3.1 +\n",
					"# dfStream = spark.readStream\\\n",
					"#     .format(\"cosmos.oltp.changeFeed\")\\\n",
					"#     .option(\"spark.synapse.linkedService\", \"asacosmosdb01\")\\\n",
					"#     .option(\"spark.cosmos.container\", \"OnlineUserProfile01\")\\\n",
					"#     .option(\"spark.cosmos.changeFeed.startFrom\", \"Beginning\")\\\n",
					"#     .option(\"spark.cosmos.changeFeed.mode\", \"Incremental\")\\\n",
					"#     .load()\n",
					""
				],
				"execution_count": null
			}
		]
	}
}